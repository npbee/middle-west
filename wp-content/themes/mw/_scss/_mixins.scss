$black: #231f20;
$grey: #d9d9d9;

/* Breakpoints */
@mixin breakpoint($point) {
	@if $point == medium {
		@media only screen and (min-width: 480px) { @content; }
	}
	@else if $point == large {
		@media only screen and (min-width: 750px) { @content; }
	}
	@else if $point == max {
		@media only screen and (min-width: 1140px) { @content; }
	}
            @else if $point == retina {
                        @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) { @content; }
            }
}


// keyframes mixin
@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @-o-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}

//animation mixin
@mixin animation ($delay, $duration, $animation) {
    -webkit-animation-delay: $delay;
    -webkit-animation-duration: $duration;
    -webkit-animation-name: $animation;
    -webkit-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

    -moz-animation-delay: $delay;
    -moz-animation-duration: $duration;
    -moz-animation-name: $animation;
    -moz-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

    -o-animation-delay: $delay;
    -o-animation-duration: $duration;
    -o-animation-name: $animation;
    -o-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

    animation-delay: $delay;
    animation-duration: $duration;
    animation-name: $animation;
    animation-fill-mode: forwards; /* this prevents the animation from restarting! */
}